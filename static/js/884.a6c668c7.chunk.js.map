{"version":3,"file":"static/js/884.a6c668c7.chunk.js","mappings":"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","sources":["components/SortingForm/SortingForm.styled.js","components/FiltersList/FiltersList.styled.js","components/FiltersList/FiltersList.jsx","components/SortingForm/SortingForm.jsx","pages/CatalogPage/CatalogPages.styled.js","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Icon from 'components/Icon/Icon';\n\nexport const Form = styled.form`\n  max-width: 360px;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  input:focus + svg {\n    stroke: #101828;\n  }\n`;\n\nexport const IconStyled = styled(Icon)`\n  position: absolute;\n  top: 50%;\n  left: 18px;\n  transform: translateY(-50%);\n  width: 18px;\n  height: 20px;\n  fill: transparent;\n  stroke: #10182899;\n`;\n\nexport const GroupTitle = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #10182899;\n  margin-bottom: ${({ primary }) => (primary ? '8px' : '14px')};\n`;\n\nexport const MainWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const SubgroupTitle = styled.p`\n  width: 100%;\n  padding-bottom: 24px;\n  margin-bottom: 24px;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  border-bottom: 1px solid #1018281a;\n`;\n\nexport const List = styled.ul`\n  border: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n","import Icon from 'components/Icon/Icon';\nimport styled, { css } from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  height: 95px;\n  width: 112px;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  border-radius: 10px;\n  border: ${({ checked }) =>\n    checked ? '1px solid #E44848' : '1px solid #10182833'};\n`;\n\nexport const HiddenInput = styled.input`\n  opacity: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  height: 95px;\n  width: 112px;\n  cursor: pointer;\n`;\n\nexport const StyledIcon = styled(Icon)`\n  width: 32px;\n  height: 32px;\n  ${props =>\n    props.specialStyle\n      ? css`\n          stroke: #101828;\n          fill: transparent;\n        `\n      : css`\n          stroke: transparent;\n          fill: #101828;\n        `}\n`;\n\nexport const Title = styled.p`\n  color: #101828;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  text-align: center;\n`;\n","import { HiddenInput, Item, StyledIcon, Title } from './FiltersList.styled';\n\nfunction FiltersList({ name, label, specialStyle, checked, handleClick }) {\n  return (\n    <Item key={name} checked={checked} onClick={handleClick}>\n      <HiddenInput defaultChecked={checked} />\n      <StyledIcon name={name} specialStyle={specialStyle} />\n      <Title>{label}</Title>\n    </Item>\n  );\n}\n\nexport default FiltersList;\n","import Input from 'components/Input/Input';\nimport {\n  Form,\n  GroupTitle,\n  IconStyled,\n  InputWrapper,\n  List,\n  MainWrapper,\n  SubgroupTitle,\n} from './SortingForm.styled';\nimport FiltersList from 'components/FiltersList/FiltersList';\nimport equipmentData from '../../data/vehicleEquipment.json';\nimport typeData from '../../data/vehicleType.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVehicles } from '../../redux/selectors';\nimport { useEffect, useState } from 'react';\nimport { filterVehicles } from '../../redux/vehicles/vehiclesSlice';\nimport { filterEquipment, filterLocation, filterType } from 'helper/helper';\n\nfunction SortingForm() {\n  const [locationFilter, setLocationFilter] = useState('');\n  const [equipmentFilter, setEquipmentFilter] = useState([]);\n  const [typeFilter, setTypeFilter] = useState(null);\n\n  const dispatch = useDispatch();\n  const vehiclesList = useSelector(selectVehicles);\n\n  const updateLocationValue = value => {\n    setLocationFilter(value);\n  };\n\n  const handleTypeChange = name => {\n    setTypeFilter(prev => {\n      if (prev === name) {\n        return null;\n      } else {\n        return name;\n      }\n    });\n  };\n\n  const handleEquipmentChange = name => {\n    setEquipmentFilter(prev => {\n      if (prev.includes(name)) {\n        return prev.filter(el => el !== name);\n      } else {\n        return [...prev, name];\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getVisibleCampers = () => {\n      let filteredVehicles = vehiclesList;\n\n      filteredVehicles = filterLocation(filteredVehicles, locationFilter);\n      filteredVehicles = filterEquipment(filteredVehicles, equipmentFilter);\n      filteredVehicles = filterType(filteredVehicles, typeFilter);\n\n      return filteredVehicles;\n    };\n\n    dispatch(filterVehicles(getVisibleCampers()));\n  }, [locationFilter, dispatch, vehiclesList, equipmentFilter, typeFilter]);\n\n  return (\n    <Form>\n      <MainWrapper>\n        <GroupTitle $primary>Location</GroupTitle>\n        <InputWrapper>\n          <Input\n            placeholder=\"City\"\n            onChange={({ target }) => updateLocationValue(target.value)}\n            location\n          />\n          <IconStyled name=\"map-pin\" />\n        </InputWrapper>\n      </MainWrapper>\n      <GroupTitle>Filters</GroupTitle>\n      <MainWrapper>\n        <SubgroupTitle>Vehicle equipment</SubgroupTitle>\n        <List>\n          {equipmentData.map(({ name, label, specialStyle }) => {\n            return (\n              <FiltersList\n                key={name}\n                name={name}\n                label={label}\n                specialStyle={specialStyle}\n                checked={equipmentFilter.includes(name)}\n                handleClick={() => handleEquipmentChange(name)}\n              />\n            );\n          })}\n        </List>\n      </MainWrapper>\n      <MainWrapper>\n        <SubgroupTitle>Vehicle type</SubgroupTitle>\n        <List>\n          {typeData.map(({ name, label, specialStyle }) => {\n            return (\n              <FiltersList\n                key={name}\n                name={name}\n                label={label}\n                specialStyle={specialStyle}\n                checked={typeFilter === name}\n                handleClick={() => handleTypeChange(name)}\n              />\n            );\n          })}\n        </List>\n      </MainWrapper>\n    </Form>\n  );\n}\n\nexport default SortingForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0px auto;\n  padding: 100px 64px;\n  max-width: 1440px;\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n`;\n","import SortingForm from 'components/SortingForm/SortingForm';\nimport VehicleList from 'components/VehicleList/VehicleList';\nimport React from 'react';\nimport { Container } from './CatalogPages.styled';\nimport { useSelector } from 'react-redux';\nimport { selectSortedVehicles } from '../../redux/selectors';\n\nfunction CatalogPage() {\n  const sortedVehicles = useSelector(selectSortedVehicles);\n\n  return (\n    <Container>\n      <SortingForm />\n      <VehicleList items={sortedVehicles} itemsPerPage={4} />\n    </Container>\n  );\n}\n\nexport default CatalogPage;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","InputWrapper","_templateObject2","IconStyled","Icon","_templateObject3","GroupTitle","_templateObject4","_ref","primary","MainWrapper","_templateObject5","SubgroupTitle","_templateObject6","List","_templateObject7","Item","checked","HiddenInput","StyledIcon","props","specialStyle","css","Title","name","label","handleClick","_jsxs","onClick","children","_jsx","defaultChecked","_useState","useState","_useState2","_slicedToArray","locationFilter","setLocationFilter","_useState3","_useState4","equipmentFilter","setEquipmentFilter","_useState5","_useState6","typeFilter","setTypeFilter","dispatch","useDispatch","vehiclesList","useSelector","selectVehicles","useEffect","filterVehicles","filteredVehicles","filterLocation","filterEquipment","filterType","getVisibleCampers","$primary","Input","placeholder","onChange","value","target","location","equipmentData","_ref2","FiltersList","includes","prev","filter","el","concat","_toConsumableArray","handleEquipmentChange","typeData","_ref3","handleTypeChange","Container","sortedVehicles","selectSortedVehicles","SortingForm","VehicleList","items","itemsPerPage"],"sourceRoot":""}